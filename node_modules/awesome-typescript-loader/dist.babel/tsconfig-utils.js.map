{"version":3,"sources":["../dist/tsconfig-utils.js"],"names":[],"mappings":"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","file":"tsconfig-utils.js","sourcesContent":["\"use strict\";\nconst path = require('path');\nconst colors = require('colors');\nlet parseJson = require('parse-json');\nlet stripBom = require('strip-bom');\nlet stripComments = require('strip-json-comments');\nconst TSCONFIG_ERROR = colors.red(`\\n\\n[awesome-typescript-loader] You have \\`resolveGlobs\\` enabled and don't have an \\`exclude\\` directive in your tsconfig file. This WILL slow down your compilation. Please add:\n    {\n        // ...\n        \"exclude\": [\n            \"node_modules\",\n            \"bower_components\"\n        ]\n    }\n`);\nfunction tsconfigSuggestions(config) {\n    let hasOnlyFiles = config.files && !config.filesGlob && !config.exclude;\n    if (hasOnlyFiles) {\n        return;\n    }\n    let hasExclude = config.exclude && (config.exclude.indexOf('node_modules') !== -1\n        || config.exclude.indexOf('./node_modules') !== -1);\n    let hasGlobIgnore = config.filesGlob && (config.filesGlob.some(item => item.indexOf('!node_modules') !== -1)\n        || !config.filesGlob.some(item => item.indexOf('!./node_modules') !== -1));\n    if (!hasExclude && !hasGlobIgnore) {\n        console.warn(TSCONFIG_ERROR);\n    }\n}\nexports.tsconfigSuggestions = tsconfigSuggestions;\nfunction parseContent(contents, filename) {\n    const data = stripComments(stripBom(contents));\n    if (/^\\s*$/.test(data)) {\n        return {};\n    }\n    return parseJson(data, null, filename);\n}\nexports.parseContent = parseContent;\nfunction buildEnumMap(tsImpl) {\n    let typescriptEnumMap = {\n        target: {\n            'es3': tsImpl.ScriptTarget.ES3,\n            'es5': tsImpl.ScriptTarget.ES5,\n            'es6': tsImpl.ScriptTarget.ES6,\n            'es2015': tsImpl.ScriptTarget.ES2015,\n            'latest': tsImpl.ScriptTarget.Latest\n        },\n        module: {\n            'none': tsImpl.ModuleKind.None,\n            'commonjs': tsImpl.ModuleKind.CommonJS,\n            'amd': tsImpl.ModuleKind.AMD,\n            'umd': tsImpl.ModuleKind.UMD,\n            'system': tsImpl.ModuleKind.System,\n            'es6': tsImpl.ModuleKind.ES6,\n            'es2015': tsImpl.ModuleKind.ES2015,\n        },\n        moduleResolution: {\n            'node': tsImpl.ModuleResolutionKind.NodeJs,\n            'classic': tsImpl.ModuleResolutionKind.Classic\n        },\n        jsx: {\n            'preserve': tsImpl.JsxEmit.Preserve,\n            'react': tsImpl.JsxEmit.React\n        },\n        newLine: {\n            'CRLF': tsImpl.NewLineKind.CarriageReturnLineFeed,\n            'LF': tsImpl.NewLineKind.LineFeed\n        }\n    };\n    return typescriptEnumMap;\n}\nfunction rawToTsCompilerOptions(jsonOptions, projectDir, tsImpl) {\n    let typescriptEnumMap = buildEnumMap(tsImpl);\n    let compilerOptions = {};\n    for (let key in jsonOptions) {\n        if (typescriptEnumMap[key]) {\n            compilerOptions[key] = typescriptEnumMap[key][jsonOptions[key].toLowerCase()];\n        }\n        else {\n            compilerOptions[key] = jsonOptions[key];\n        }\n    }\n    if (compilerOptions.outDir !== undefined) {\n        compilerOptions.outDir = path.resolve(projectDir, compilerOptions.outDir);\n    }\n    if (compilerOptions.rootDir !== undefined) {\n        compilerOptions.rootDir = path.resolve(projectDir, compilerOptions.rootDir);\n    }\n    if (compilerOptions.out !== undefined) {\n        compilerOptions.out = path.resolve(projectDir, compilerOptions.out);\n    }\n    if (compilerOptions.outFile !== undefined) {\n        compilerOptions.out = path.resolve(projectDir, compilerOptions.outFile);\n    }\n    return compilerOptions;\n}\nexports.rawToTsCompilerOptions = rawToTsCompilerOptions;\n//# sourceMappingURL=tsconfig-utils.js.map"]}