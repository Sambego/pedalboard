{"version":3,"sources":["../dist/checker-runtime.js"],"names":[],"mappings":"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","file":"checker-runtime.js","sourcesContent":["\"use strict\";\nconst resolver_1 = require('./resolver');\nconst colors = require('colors');\nconst path = require('path');\nconst fs = require('fs');\nrequire('babel-polyfill');\n(function (MessageType) {\n    MessageType[MessageType[\"Init\"] = 'init'] = \"Init\";\n    MessageType[MessageType[\"Compile\"] = 'compile'] = \"Compile\";\n})(exports.MessageType || (exports.MessageType = {}));\nvar MessageType = exports.MessageType;\nlet env = {};\nclass ModuleResolutionHost {\n    constructor(servicesHost) {\n        this.servicesHost = servicesHost;\n    }\n    fileExists(fileName) {\n        return this.servicesHost.getScriptSnapshot(fileName) !== undefined;\n    }\n    readFile(fileName) {\n        let snapshot = this.servicesHost.getScriptSnapshot(fileName);\n        return snapshot && snapshot.getText(0, snapshot.getLength());\n    }\n}\nexports.ModuleResolutionHost = ModuleResolutionHost;\nclass Host {\n    constructor() {\n        this.moduleResolutionHost = new ModuleResolutionHost(this);\n        this.resolver = resolver_1.default(env.webpackOptions);\n    }\n    normalizePath(filePath) {\n        return path.normalize(filePath);\n    }\n    getScriptFileNames() {\n        return Object.keys(env.files);\n    }\n    getScriptVersion(fileName) {\n        if (env.files[fileName]) {\n            return env.files[fileName].version.toString();\n        }\n    }\n    getScriptSnapshot(fileName) {\n        let fileName_ = path.normalize(fileName);\n        let file = env.files[fileName_];\n        if (!file) {\n            try {\n                file = {\n                    version: 0,\n                    text: fs.readFileSync(fileName, { encoding: 'utf8' }).toString()\n                };\n                if (path.basename(fileName) !== 'package.json') {\n                    env.files[fileName_] = file;\n                }\n            }\n            catch (e) {\n                return;\n            }\n        }\n        return env.compiler.ScriptSnapshot.fromString(file.text);\n    }\n    getCurrentDirectory() {\n        return process.cwd();\n    }\n    getScriptIsOpen() {\n        return true;\n    }\n    getCompilationSettings() {\n        return env.options;\n    }\n    resolveModuleNames(moduleNames, containingFile) {\n        let resolvedModules = [];\n        for (let moduleName of moduleNames) {\n            let cached = env.resolutionCache[`${containingFile}::${moduleName}`];\n            if (cached) {\n                resolvedModules.push(cached);\n            }\n            else {\n                let resolvedFileName;\n                let resolvedModule;\n                try {\n                    resolvedFileName = this.resolver.resolveSync(this.normalizePath(path.dirname(containingFile)), moduleName);\n                    if (!resolvedFileName.match(/\\.tsx?$/)) {\n                        resolvedFileName = null;\n                    }\n                }\n                catch (e) {\n                    resolvedFileName = null;\n                }\n                let tsResolved = env.compiler.resolveModuleName(resolvedFileName || moduleName, containingFile, env.options, this.moduleResolutionHost);\n                if (tsResolved.resolvedModule) {\n                    resolvedModule = tsResolved.resolvedModule;\n                }\n                else {\n                    resolvedModule = {\n                        resolvedFileName: resolvedFileName || ''\n                    };\n                }\n                resolvedModules.push(resolvedModule);\n            }\n        }\n        return resolvedModules;\n    }\n    getDefaultLibFileName(options) {\n        return options.target === env.compiler.ScriptTarget.ES6 ?\n            env.compilerInfo.lib6.fileName :\n            env.compilerInfo.lib5.fileName;\n    }\n    log(message) {\n    }\n}\nexports.Host = Host;\nfunction processInit(payload) {\n    env.compiler = require(payload.compilerInfo.compilerName);\n    env.compilerInfo = payload.compilerInfo;\n    env.options = payload.compilerOptions;\n    env.webpackOptions = payload.webpackOptions;\n    env.host = new Host();\n    env.service = env.compiler.createLanguageService(env.host, env.compiler.createDocumentRegistry());\n    env.plugins = payload.plugins;\n    env.initedPlugins = env.plugins.map(plugin => {\n        return require(plugin.file)(plugin.options);\n    });\n}\nfunction processCompile(payload) {\n    let instanceName = env.options.instanceName || 'default';\n    let silent = !!env.options.forkCheckerSilent;\n    if (!silent) {\n        console.log(colors.cyan(`[${instanceName}] Checking started in a separate process...`));\n    }\n    let timeStart = +new Date();\n    process.send({\n        messageType: 'progress',\n        payload: {\n            inProgress: true\n        }\n    });\n    env.files = payload.files;\n    env.resolutionCache = payload.resolutionCache;\n    let program = env.program = env.service.getProgram();\n    let allDiagnostics = env.compiler.getPreEmitDiagnostics(program);\n    if (allDiagnostics.length) {\n        allDiagnostics.forEach(diagnostic => {\n            let message = env.compiler.flattenDiagnosticMessageText(diagnostic.messageText, '\\n');\n            if (diagnostic.file) {\n                let { line, character } = diagnostic.file.getLineAndCharacterOfPosition(diagnostic.start);\n                console.error(`[${instanceName}] ${colors.red(diagnostic.file.fileName)} (${line + 1},${character + 1}):\\n    ${colors.red(message)}`);\n            }\n            else {\n                console.error(colors.red(`[${instanceName}] ${message}`));\n            }\n        });\n    }\n    else {\n        if (!silent) {\n            let timeEnd = +new Date();\n            console.log(colors.green(`[${instanceName}] Ok, ${(timeEnd - timeStart) / 1000} sec.`));\n        }\n    }\n    env.initedPlugins.forEach(plugin => {\n        plugin.processProgram(program);\n    });\n    process.send({\n        messageType: 'progress',\n        payload: {\n            inProgress: false\n        }\n    });\n}\nprocess.on('message', function (msg) {\n    switch (msg.messageType) {\n        case MessageType.Init:\n            processInit(msg.payload);\n            break;\n        case MessageType.Compile:\n            processCompile(msg.payload);\n            break;\n    }\n});\n//# sourceMappingURL=checker-runtime.js.map"]}