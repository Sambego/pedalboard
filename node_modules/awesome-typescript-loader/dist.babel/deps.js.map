{"version":3,"sources":["../dist/deps.js"],"names":[],"mappings":"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","file":"deps.js","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments)).next());\n    });\n};\nconst _ = require('lodash');\nconst path = require('path');\nconst promisify = require('es6-promisify');\nlet objectAssign = require('object-assign');\nfunction createResolver(externals, exclude, webpackResolver) {\n    let resolver = promisify(webpackResolver);\n    function resolve(base, dep) {\n        let inWebpackExternals = externals && externals.hasOwnProperty(dep);\n        let inTypeScriptExclude = false;\n        if ((inWebpackExternals || inTypeScriptExclude)) {\n            return Promise.resolve('%%ignore');\n        }\n        else {\n            return resolver(base, dep).then(resultPath => {\n                if (!resultPath.match(/.tsx?$/)) {\n                    let matchedExcludes = exclude.filter((excl) => {\n                        return resultPath.indexOf(excl) !== -1;\n                    });\n                    if (matchedExcludes.length > 0) {\n                        return '%%ignore';\n                    }\n                    else {\n                        return resultPath;\n                    }\n                }\n                else {\n                    return resultPath;\n                }\n            });\n        }\n    }\n    return resolve;\n}\nexports.createResolver = createResolver;\nfunction isTypeDeclaration(fileName) {\n    return /\\.d.ts$/.test(fileName);\n}\nfunction isImportOrExportDeclaration(node) {\n    return (!!node.exportClause || !!node.importClause)\n        && node.moduleSpecifier;\n}\nfunction isImportEqualsDeclaration(node) {\n    return !!node.moduleReference && node.moduleReference.hasOwnProperty('expression');\n}\nfunction isIgnoreDependency(absulutePath) {\n    return absulutePath == '%%ignore';\n}\nclass FileAnalyzer {\n    constructor(state) {\n        this.dependencies = new DependencyManager();\n        this.validFiles = new ValidFilesManager();\n        this.state = state;\n    }\n    checkDependencies(resolver, fileName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.validFiles.isFileValid(fileName)) {\n                return false;\n            }\n            this.validFiles.markFileValid(fileName);\n            this.dependencies.clearDependencies(fileName);\n            let changed = false;\n            try {\n                if (!this.state.hasFile(fileName)) {\n                    changed = yield this.state.readFileAndUpdate(fileName);\n                }\n                yield this.checkDependenciesInternal(resolver, fileName);\n            }\n            catch (err) {\n                this.validFiles.markFileInvalid(fileName);\n                throw err;\n            }\n            return changed;\n        });\n    }\n    checkDependenciesInternal(resolver, fileName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let imports = yield this.findImportDeclarations(resolver, fileName);\n            let tasks = [];\n            for (let i = 0; i < imports.length; i++) {\n                let importPath = imports[i];\n                let isDeclaration = isTypeDeclaration(importPath);\n                let isRequiredJs = /\\.js$/.exec(importPath) || importPath.indexOf('.') === -1;\n                if (isDeclaration) {\n                    let hasDeclaration = this.dependencies.hasTypeDeclaration(importPath);\n                    if (!hasDeclaration) {\n                        this.dependencies.addTypeDeclaration(importPath);\n                        tasks.push(this.checkDependencies(resolver, importPath));\n                    }\n                }\n                else if (isRequiredJs && !this.state.options.allowJs) {\n                    continue;\n                }\n                else {\n                    this.dependencies.addDependency(fileName, importPath);\n                    tasks.push(this.checkDependencies(resolver, importPath));\n                }\n            }\n            yield Promise.all(tasks);\n            return null;\n        });\n    }\n    findImportDeclarations(resolver, fileName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sourceFile = this.state.services.getSourceFile(fileName);\n            let isDeclaration = isTypeDeclaration(fileName);\n            let imports = [];\n            let visit = (node) => {\n                if (!isDeclaration && isImportEqualsDeclaration(node)) {\n                    let importPath = node.moduleReference.expression.text;\n                    imports.push(importPath);\n                }\n                else if (!isDeclaration && isImportOrExportDeclaration(node)) {\n                    let importPath = node.moduleSpecifier.text;\n                    imports.push(importPath);\n                }\n            };\n            imports.push.apply(imports, sourceFile.referencedFiles.map(file => file.fileName));\n            this.state.ts.forEachChild(sourceFile, visit);\n            let task = imports.map((importPath) => __awaiter(this, void 0, void 0, function* () {\n                let absolutePath = yield this.resolve(resolver, fileName, importPath);\n                if (!isIgnoreDependency(absolutePath)) {\n                    return absolutePath;\n                }\n            }));\n            let resolvedImports = yield Promise.all(task);\n            return resolvedImports.filter(Boolean);\n        });\n    }\n    resolve(resolver, fileName, defPath) {\n        let result;\n        if (/^[a-z0-9].*\\.d\\.ts$/.test(defPath)) {\n            defPath = './' + defPath;\n        }\n        if (isTypeDeclaration(defPath)) {\n            result = Promise.resolve(path.resolve(path.dirname(fileName), defPath));\n        }\n        else {\n            result = resolver(path.dirname(fileName), defPath)\n                .catch(function (error) {\n                try {\n                    if (require.resolve(defPath) == defPath) {\n                        return defPath;\n                    }\n                    else {\n                        throw error;\n                    }\n                }\n                catch (e) {\n                    throw error;\n                }\n            });\n        }\n        return result\n            .catch(function (error) {\n            let detailedError = new ResolutionError();\n            detailedError.message = error.message + \"\\n    Required in \" + fileName;\n            detailedError.cause = error;\n            detailedError.fileName = fileName;\n            throw detailedError;\n        });\n    }\n}\nexports.FileAnalyzer = FileAnalyzer;\nclass DependencyManager {\n    constructor(dependencies = {}, knownTypeDeclarations = {}) {\n        this.dependencies = dependencies;\n        this.knownTypeDeclarations = knownTypeDeclarations;\n        this.compiledModules = {};\n    }\n    clone() {\n        return new DependencyManager(_.cloneDeep(this.dependencies), _.cloneDeep(this.knownTypeDeclarations));\n    }\n    addDependency(fileName, depFileName) {\n        if (!this.dependencies.hasOwnProperty(fileName)) {\n            this.clearDependencies(fileName);\n        }\n        this.dependencies[fileName].push(depFileName);\n    }\n    addCompiledModule(fileName, depFileName) {\n        if (!this.compiledModules.hasOwnProperty(fileName)) {\n            this.clearCompiledModules(fileName);\n        }\n        let store = this.compiledModules[fileName];\n        if (store.indexOf(depFileName) === -1) {\n            store.push(depFileName);\n        }\n    }\n    clearDependencies(fileName) {\n        this.dependencies[fileName] = [];\n    }\n    clearCompiledModules(fileName) {\n        this.compiledModules[fileName] = [];\n    }\n    getDependencies(fileName) {\n        if (!this.dependencies.hasOwnProperty(fileName)) {\n            this.clearDependencies(fileName);\n        }\n        return this.dependencies[fileName].slice();\n    }\n    addTypeDeclaration(fileName) {\n        this.knownTypeDeclarations[fileName] = true;\n    }\n    hasTypeDeclaration(fileName) {\n        return this.knownTypeDeclarations.hasOwnProperty(fileName);\n    }\n    getTypeDeclarations() {\n        return objectAssign({}, this.knownTypeDeclarations);\n    }\n    getDependencyGraph(fileName) {\n        let appliedDeps = {};\n        let result = {\n            fileName,\n            dependencies: []\n        };\n        let walk = (fileName, context) => {\n            this.getDependencies(fileName).forEach((depFileName) => {\n                let depContext = {\n                    fileName: depFileName,\n                    dependencies: []\n                };\n                context.dependencies.push(depContext);\n                if (!appliedDeps[depFileName]) {\n                    appliedDeps[depFileName] = true;\n                    walk(depFileName, depContext);\n                }\n            });\n        };\n        walk(fileName, result);\n        return result;\n    }\n    applyCompiledFiles(fileName, deps) {\n        if (!this.compiledModules.hasOwnProperty(fileName)) {\n            this.clearCompiledModules(fileName);\n        }\n        this.compiledModules[fileName].forEach((mod) => {\n            deps.add(mod);\n        });\n    }\n    applyChain(fileName, deps) {\n        if (!this.dependencies.hasOwnProperty(fileName)) {\n            this.clearDependencies(fileName);\n        }\n        let appliedDeps = {};\n        let graph = this.getDependencyGraph(fileName);\n        let walk = (item) => {\n            let itemFileName = item.fileName;\n            if (!appliedDeps[itemFileName]) {\n                appliedDeps[itemFileName] = true;\n                deps.add(itemFileName);\n                item.dependencies.forEach((dep) => walk(dep));\n            }\n        };\n        walk(graph);\n    }\n}\nexports.DependencyManager = DependencyManager;\nclass ValidFilesManager {\n    constructor() {\n        this.files = {};\n    }\n    isFileValid(fileName) {\n        return !!this.files[fileName];\n    }\n    markFileValid(fileName) {\n        this.files[fileName] = true;\n    }\n    markFileInvalid(fileName) {\n        this.files[fileName] = false;\n    }\n}\nexports.ValidFilesManager = ValidFilesManager;\nclass ResolutionError extends Error {\n}\nexports.ResolutionError = ResolutionError;\n//# sourceMappingURL=deps.js.map"]}