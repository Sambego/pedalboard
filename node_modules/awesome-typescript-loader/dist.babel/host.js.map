{"version":3,"sources":["../dist/host.js"],"names":[],"mappings":"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","file":"host.js","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments)).next());\n    });\n};\nconst fs = require('fs');\nconst util = require('util');\nconst path = require('path');\nconst promisify = require('es6-promisify');\nconst deps_1 = require('./deps');\nconst helpers_1 = require('./helpers');\nlet objectAssign = require('object-assign');\nlet RUNTIME = helpers_1.loadLib('../lib/runtime.d.ts');\nclass ModuleResolutionHost {\n    constructor(servicesHost) {\n        this.resolutionCache = {};\n        this.servicesHost = servicesHost;\n    }\n    fileExists(fileName) {\n        return this.servicesHost.getScriptSnapshot(fileName) !== undefined;\n    }\n    readFile(fileName) {\n        let snapshot = this.servicesHost.getScriptSnapshot(fileName);\n        return snapshot && snapshot.getText(0, snapshot.getLength());\n    }\n}\nexports.ModuleResolutionHost = ModuleResolutionHost;\nclass Host {\n    constructor(state) {\n        this.state = state;\n        this.moduleResolutionHost = new ModuleResolutionHost(this);\n    }\n    getScriptFileNames() {\n        return this.state.allFileNames();\n    }\n    getScriptVersion(fileName) {\n        if (this.state.getFile(fileName)) {\n            return this.state.getFile(fileName).version.toString();\n        }\n    }\n    getScriptSnapshot(fileName) {\n        let file = this.state.getFile(fileName);\n        if (!file) {\n            try {\n                if (!fileName.match(/\\.tsx?$|package[.]json?$/)) {\n                    let matchedExcludes = this.state.options.exclude.filter((excl) => {\n                        return fileName.indexOf(excl) !== -1;\n                    });\n                    if (matchedExcludes.length > 0) {\n                        return;\n                    }\n                }\n                let text = this.state.readFileSync(fileName);\n                file = {\n                    version: 0,\n                    text\n                };\n                if (path.basename(fileName) !== 'package.json') {\n                    file = this.state.addFile(fileName, text);\n                }\n            }\n            catch (e) {\n                return;\n            }\n        }\n        return this.state.ts.ScriptSnapshot.fromString(file.text);\n    }\n    getCurrentDirectory() {\n        return process.cwd();\n    }\n    getScriptIsOpen() {\n        return true;\n    }\n    getCompilationSettings() {\n        return this.state.options;\n    }\n    getDefaultLibFileName(options) {\n        return options.target === this.state.ts.ScriptTarget.ES6 ?\n            this.state.compilerInfo.lib6.fileName :\n            this.state.compilerInfo.lib5.fileName;\n    }\n    resolveModuleNames(moduleNames, containingFile) {\n        let resolvedModules = [];\n        for (let moduleName of moduleNames) {\n            let resolvedFileName;\n            let resolvedModule;\n            try {\n                resolvedFileName = this.state.resolver(this.state.normalizePath(path.dirname(containingFile)), moduleName);\n                if (!resolvedFileName.match(/\\.tsx?$/)) {\n                    resolvedFileName = null;\n                }\n            }\n            catch (e) {\n                resolvedFileName = null;\n            }\n            let tsResolved = this.state.ts.resolveModuleName(resolvedFileName || moduleName, containingFile, this.state.options, this.moduleResolutionHost);\n            if (tsResolved.resolvedModule) {\n                resolvedModule = tsResolved.resolvedModule;\n            }\n            else {\n                resolvedModule = {\n                    resolvedFileName: resolvedFileName || ''\n                };\n            }\n            this.moduleResolutionHost.resolutionCache[`${containingFile}::${moduleName}`] = resolvedModule;\n            resolvedModules.push(resolvedModule);\n        }\n        return resolvedModules;\n    }\n    log(message) {\n    }\n}\nexports.Host = Host;\nclass State {\n    constructor(options, fsImpl, compilerInfo, resolver) {\n        this.files = {};\n        this.ts = compilerInfo.tsImpl;\n        this.compilerInfo = compilerInfo;\n        this.resolver = resolver;\n        this.fs = fsImpl;\n        this.readFileImpl = promisify(this.fs.readFile.bind(this.fs));\n        this.host = new Host(this);\n        this.services = this.ts.createLanguageService(this.host, this.ts.createDocumentRegistry());\n        this.fileAnalyzer = new deps_1.FileAnalyzer(this);\n        this.options = {};\n        objectAssign(this.options, options);\n        if (this.options.emitRequireType) {\n            this.addFile(RUNTIME.fileName, RUNTIME.text);\n        }\n        if (!this.options.noLib) {\n            if (this.options.target === this.ts.ScriptTarget.ES6 || this.options.library === 'es6') {\n                this.addFile(this.compilerInfo.lib6.fileName, this.compilerInfo.lib6.text);\n            }\n            else {\n                this.addFile(this.compilerInfo.lib5.fileName, this.compilerInfo.lib5.text);\n            }\n        }\n    }\n    updateProgram() {\n        this.program = this.services.getProgram();\n    }\n    allFileNames() {\n        return Object.keys(this.files);\n    }\n    allFiles() {\n        return this.files;\n    }\n    emit(fileName) {\n        fileName = this.normalizePath(fileName);\n        if (!this.program) {\n            this.program = this.services.getProgram();\n        }\n        let outputFiles = [];\n        function writeFile(fileName, data, writeByteOrderMark) {\n            outputFiles.push({\n                sourceName: fileName,\n                name: fileName,\n                writeByteOrderMark: writeByteOrderMark,\n                text: data\n            });\n        }\n        let source = this.program.getSourceFile(fileName);\n        if (!source) {\n            this.updateProgram();\n            source = this.program.getSourceFile(fileName);\n            if (!source) {\n                throw new Error(`File ${fileName} was not found in program`);\n            }\n        }\n        let emitResult = this.program.emit(source, writeFile);\n        let output = {\n            outputFiles: outputFiles,\n            emitSkipped: emitResult.emitSkipped\n        };\n        if (!output.emitSkipped) {\n            return output;\n        }\n        else {\n            throw new Error(\"Emit skipped\");\n        }\n    }\n    updateFile(fileName, text, checked = false) {\n        fileName = this.normalizePath(fileName);\n        let prevFile = this.files[fileName];\n        let version = 0;\n        let changed = true;\n        if (prevFile) {\n            if (!checked || (checked && text !== prevFile.text)) {\n                version = prevFile.version + 1;\n            }\n            else {\n                changed = false;\n            }\n        }\n        this.files[fileName] = {\n            text: text,\n            version: version\n        };\n        return changed;\n    }\n    addFile(fileName, text) {\n        fileName = this.normalizePath(fileName);\n        return this.files[fileName] = {\n            text: text,\n            version: 0\n        };\n    }\n    getFile(fileName) {\n        fileName = this.normalizePath(fileName);\n        return this.files[fileName];\n    }\n    hasFile(fileName) {\n        fileName = this.normalizePath(fileName);\n        return this.files.hasOwnProperty(fileName);\n    }\n    readFile(fileName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            fileName = this.normalizePath(fileName);\n            let buf = yield this.readFileImpl(fileName);\n            return buf.toString('utf8');\n        });\n    }\n    readFileSync(fileName) {\n        fileName = this.normalizePath(fileName);\n        return fs.readFileSync(fileName, { encoding: 'utf-8' });\n    }\n    readFileAndAdd(fileName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            fileName = this.normalizePath(fileName);\n            let text = yield this.readFile(fileName);\n            this.addFile(fileName, text);\n        });\n    }\n    readFileAndUpdate(fileName, checked = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            fileName = this.normalizePath(fileName);\n            let text = yield this.readFile(fileName);\n            return this.updateFile(fileName, text, checked);\n        });\n    }\n    readFileAndUpdateSync(fileName, checked = false) {\n        fileName = this.normalizePath(fileName);\n        let text = this.readFileSync(fileName);\n        return this.updateFile(fileName, text, checked);\n    }\n    normalizePath(filePath) {\n        return path.normalize(filePath);\n    }\n}\nexports.State = State;\nfunction TypeScriptCompilationError(diagnostics) {\n    this.diagnostics = diagnostics;\n}\nexports.TypeScriptCompilationError = TypeScriptCompilationError;\nutil.inherits(TypeScriptCompilationError, Error);\n//# sourceMappingURL=host.js.map"]}