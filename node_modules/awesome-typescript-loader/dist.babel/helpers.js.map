{"version":3,"sources":["../dist/helpers.js"],"names":[],"mappings":"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","file":"helpers.js","sourcesContent":["\"use strict\";\nconst fs = require('fs');\nconst path = require('path');\nfunction withoutExt(fileName) {\n    return path.join(path.dirname(fileName), path.basename(fileName).split('.')[0]);\n}\nfunction isFileEmit(fileName, outputFileName, sourceFileName) {\n    return sourceFileName === fileName\n        && (outputFileName.substr(-3) === '.js' || outputFileName.substr(-4) === '.jsx');\n}\nfunction isSourceMapEmit(fileName, outputFileName, sourceFileName) {\n    return sourceFileName === fileName\n        && (outputFileName.substr(-7) === '.js.map' || outputFileName.substr(-8) === '.jsx.map');\n}\nfunction findResultFor(output, fileName) {\n    let text;\n    let sourceMap;\n    fileName = withoutExt(path.normalize(fileName));\n    for (let i = 0; i < output.outputFiles.length; i++) {\n        let o = output.outputFiles[i];\n        let outputFileName = path.normalize(o.name);\n        let sourceFileName = withoutExt(path.normalize(o.sourceName));\n        if (isFileEmit(fileName, outputFileName, sourceFileName)) {\n            text = o.text;\n        }\n        if (isSourceMapEmit(fileName, outputFileName, sourceFileName)) {\n            sourceMap = o.text;\n        }\n    }\n    return {\n        text: text,\n        sourceMap: sourceMap\n    };\n}\nexports.findResultFor = findResultFor;\nfunction codegenErrorReport(errors) {\n    return errors\n        .map(function (error) {\n        return 'console.error(' + JSON.stringify(error) + ');';\n    })\n        .join('\\n');\n}\nexports.codegenErrorReport = codegenErrorReport;\nfunction formatErrors(instanceName, errors) {\n    return errors.map(function (diagnostic) {\n        let lineChar;\n        if (diagnostic.file) {\n            lineChar = diagnostic.file.getLineAndCharacterOfPosition(diagnostic.start);\n        }\n        return (`[${instanceName}] ` + (diagnostic.file ? diagnostic.file.fileName : '')\n            + (lineChar ? formatLineChar(lineChar) + ' ' : '') + \"\\n\"\n            + (typeof diagnostic.messageText == \"string\" ?\n                diagnostic.messageText :\n                formatMessageChain(diagnostic.messageText)));\n    });\n}\nexports.formatErrors = formatErrors;\nfunction formatMessageChain(chain) {\n    let result = \"\";\n    let separator = \"\\n  \";\n    let current = chain;\n    while (current) {\n        result += current.messageText;\n        if (!!current.next) {\n            result += separator;\n            separator += \"  \";\n        }\n        current = current.next;\n    }\n    return result;\n}\nexports.formatMessageChain = formatMessageChain;\nfunction formatLineChar(lineChar) {\n    return ':' + (lineChar.line + 1) + ':' + lineChar.character;\n}\nexports.formatLineChar = formatLineChar;\nfunction loadLib(moduleId) {\n    let fileName = require.resolve(moduleId);\n    let text = fs.readFileSync(fileName, 'utf8');\n    return {\n        fileName: fileName,\n        text: text\n    };\n}\nexports.loadLib = loadLib;\n//# sourceMappingURL=helpers.js.map"]}