{"version":3,"sources":["../../dist/test/checker.js"],"names":[],"mappings":"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","file":"checker.js","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments)).next());\n    });\n};\nconst utils_1 = require('./utils');\nlet ps = require('ps-node');\nfunction getCheckerRuntimeProcess() {\n    let opts = {\n        command: /node/,\n        arguments: /checker-runtime/,\n        psargs: 'aux'\n    };\n    return new Promise((resolve, reject) => {\n        ps.lookup(opts, (err, resultList) => {\n            resolve(resultList[0]);\n        });\n    });\n}\n;\nfunction kill(p) {\n    return new Promise((resolve, reject) => {\n        ps.kill(p.pid, resolve);\n    });\n}\n;\nfunction sleep(time) {\n    return new Promise((resolve, reject) => {\n        setTimeout(resolve, time);\n    });\n}\n;\ndescribe('checker test', function () {\n    this.timeout(5000);\n    let fixture = utils_1.fixturePath(['checker', 'to-check.ts']);\n    let config = utils_1.createConfig({\n        entry: fixture,\n    }, {\n        watch: true,\n        forkChecker: true,\n        loaderParams: '&+forkChecker'\n    });\n    it('should fork checker in separate process', function () {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield utils_1.cleanOutputDir();\n            let watcher = yield utils_1.watch(config, () => { });\n            let pid = yield getCheckerRuntimeProcess();\n            utils_1.expect(pid).ok;\n            watcher.close();\n            yield kill(pid);\n        });\n    });\n    it('should fork only one checker after multiple changes', function () {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield utils_1.cleanOutputDir();\n            let watcher = yield utils_1.watch(config, () => { });\n            let pid = yield getCheckerRuntimeProcess();\n            utils_1.expect(pid).ok;\n            let i = 10;\n            while (i--) {\n                yield utils_1.touchFile(fixture);\n                yield sleep(50);\n            }\n            yield sleep(2000);\n            watcher.close();\n            yield kill(pid);\n        });\n    });\n});\n//# sourceMappingURL=checker.js.map"]}