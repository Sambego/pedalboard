{"version":3,"sources":["../dist/checker.js"],"names":[],"mappings":"AAAA;;AACA,IAAM,IAAI,QAAQ,QAAR,CAAJ;AACN,IAAM,eAAe,QAAQ,eAAR,CAAf;AACN,IAAM,OAAO,QAAQ,MAAR,CAAP;AACN,SAAS,aAAT,CAAuB,YAAvB,EAAqC,eAArC,EAAsD,cAAtD,EAAsE,OAAtE,EAA+E;AAC3E,QAAI,UAAU,aAAa,IAAb,CAAkB,KAAK,IAAL,CAAU,SAAV,EAAqB,oBAArB,CAAlB,CAAV,CADuE;AAE3E,YAAQ,IAAR,CAAa;AACT,qBAAa,MAAb;AACA,iBAAS;AACL,0BAAc,EAAE,IAAF,CAAO,YAAP,EAAqB,QAArB,CAAd;AACA,4CAFK;AAGL,0CAHK;AAIL,4BAJK;SAAT;KAFJ,EAQG,IARH,EAF2E;AAW3E,YAAQ,UAAR,GAAqB,KAArB,CAX2E;AAY3E,YAAQ,YAAR,GAAuB,YAAvB,CAZ2E;AAa3E,YAAQ,eAAR,GAA0B,eAA1B,CAb2E;AAc3E,YAAQ,cAAR,GAAyB,cAAzB,CAd2E;AAe3E,YAAQ,EAAR,CAAW,SAAX,EAAsB,UAAU,GAAV,EAAe;AACjC,YAAI,IAAI,WAAJ,IAAmB,UAAnB,EAA+B;AAC/B,oBAAQ,UAAR,GAAqB,IAAI,OAAJ,CAAY,UAAZ,CADU;SAAnC;KADkB,CAAtB,CAf2E;AAoB3E,WAAO,OAAP,CApB2E;CAA/E;AAsBA,QAAQ,aAAR,GAAwB,aAAxB;AACA,SAAS,YAAT,CAAsB,OAAtB,EAA+B;AAC3B,QAAI,QAAQ,UAAR,EAAoB;AACpB,gBAAQ,IAAR,CAAa,SAAb,EADoB;AAEpB,eAAO,cAAc,QAAQ,YAAR,EAAsB,QAAQ,eAAR,EAAyB,QAAQ,cAAR,EAAwB,QAAQ,OAAR,CAA5F,CAFoB;KAAxB,MAIK;AACD,eAAO,OAAP,CADC;KAJL;CADJ;AASA,QAAQ,YAAR,GAAuB,YAAvB","file":"checker.js","sourcesContent":["\"use strict\";\nconst _ = require('lodash');\nconst childProcess = require('child_process');\nconst path = require('path');\nfunction createChecker(compilerInfo, compilerOptions, webpackOptions, plugins) {\n    let checker = childProcess.fork(path.join(__dirname, 'checker-runtime.js'));\n    checker.send({\n        messageType: 'init',\n        payload: {\n            compilerInfo: _.omit(compilerInfo, 'tsImpl'),\n            compilerOptions,\n            webpackOptions,\n            plugins\n        }\n    }, null);\n    checker.inProgress = false;\n    checker.compilerInfo = compilerInfo;\n    checker.compilerOptions = compilerOptions;\n    checker.webpackOptions = webpackOptions;\n    checker.on('message', function (msg) {\n        if (msg.messageType == 'progress') {\n            checker.inProgress = msg.payload.inProgress;\n        }\n    });\n    return checker;\n}\nexports.createChecker = createChecker;\nfunction resetChecker(checker) {\n    if (checker.inProgress) {\n        checker.kill('SIGKILL');\n        return createChecker(checker.compilerInfo, checker.compilerOptions, checker.webpackOptions, checker.plugins);\n    }\n    else {\n        return checker;\n    }\n}\nexports.resetChecker = resetChecker;\n//# sourceMappingURL=checker.js.map"]}