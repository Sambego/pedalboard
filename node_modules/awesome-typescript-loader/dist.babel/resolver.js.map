{"version":3,"sources":["../dist/resolver.js"],"names":[],"mappings":"AAAA;;AACA,IAAI,WAAW,QAAQ,+BAAR,CAAX;AACJ,IAAI,4BAA4B,QAAQ,gDAAR,CAA5B;AACJ,IAAI,wBAAwB,QAAQ,4CAAR,CAAxB;AACJ,IAAI,oBAAoB,QAAQ,wCAAR,CAApB;AACJ,IAAI,6BAA6B,QAAQ,iDAAR,CAA7B;AACJ,IAAI,sBAAsB,QAAQ,0CAAR,CAAtB;AACJ,IAAI,qBAAqB,QAAQ,yCAAR,CAArB;AACJ,IAAI,0BAA0B,QAAQ,8CAAR,CAA1B;AACJ,IAAI,oBAAoB,QAAQ,wCAAR,CAApB;AACJ,IAAI,6BAA6B,QAAQ,iDAAR,CAA7B;AACJ,IAAI,iCAAiC,QAAQ,qDAAR,CAAjC;AACJ,IAAI,2CAA2C,QAAQ,+DAAR,CAA3C;AACJ,IAAI,mBAAmB,QAAQ,uCAAR,CAAnB;AACJ,IAAI,sBAAsB,QAAQ,0CAAR,CAAtB;AACJ,SAAS,cAAT,CAAwB,IAAxB,EAA8B,IAA9B,EAAoC;AAChC,QAAI,OAAO,IAAP,KAAgB,QAAhB,EAA0B;AAC1B,eAAO,IAAI,mBAAJ,CAAwB,IAAxB,EAA8B,IAA9B,CAAP,CAD0B;KAA9B,MAGK,IAAI,MAAM,OAAN,CAAc,IAAd,CAAJ,EAAyB;AAC1B,eAAO,YAAY;AACf,iBAAK,OAAL,CAAa,UAAU,IAAV,EAAgB;AACzB,qBAAK,KAAL,CAAW,IAAI,mBAAJ,CAAwB,IAAxB,EAA8B,IAA9B,CAAX,EADyB;aAAhB,EAEV,IAFH,EADe;SAAZ,CADmB;KAAzB;AAOL,WAAO,YAAY,EAAZ,CAXyB;CAApC;AAaA,SAAS,YAAT,CAAsB,OAAtB,EAA+B;AAC3B,QAAI,aAAa,IAAI,qBAAJ,CAA0B,IAAI,yBAAJ,EAA1B,EAA2D,KAA3D,CAAb,CADuB;AAE3B,QAAI,WAAW,IAAI,QAAJ,CAAa,UAAb,CAAX,CAFuB;AAG3B,aAAS,KAAT,CAAe,IAAI,iBAAJ,CAAsB,QAAQ,OAAR,CAAgB,WAAhB,CAArC,EAAmE,QAAQ,OAAR,CAAgB,YAAhB,GAA+B,IAAI,wCAAJ,CAA6C,cAA7C,EAA6D,QAAQ,OAAR,CAAgB,YAAhB,CAA5F,GAA4H,YAAY,EAAZ,EAAiB,IAAI,iBAAJ,CAAsB,QAAQ,OAAR,CAAgB,KAAhB,CAAtO,EAA8P,eAAe,QAAf,EAAyB,QAAQ,OAAR,CAAgB,IAAhB,CAAvR,EAA8S,IAAI,0BAAJ,CAA+B,QAA/B,EAAyC,QAAQ,OAAR,CAAgB,kBAAhB,CAAvV,EAA4X,eAAe,QAAf,EAAyB,QAAQ,OAAR,CAAgB,QAAhB,CAArZ,EAAgb,IAAI,kBAAJ,CAAuB,QAAvB,CAAhb,EAAkd,IAAI,uBAAJ,CAA4B,QAA5B,CAAld,EAAyf,IAAI,8BAAJ,CAAmC,cAAnC,EAAmD,QAAQ,OAAR,CAAgB,YAAhB,CAA5iB,EAA2kB,IAAI,0BAAJ,CAA+B,CAAC,OAAD,CAA/B,CAA3kB,EAAsnB,IAAI,gBAAJ,CAAqB,QAAQ,OAAR,CAAgB,UAAhB,CAA3oB,EAAwqB,IAAI,mBAAJ,EAAxqB,EAH2B;AAI3B,WAAO,QAAP,CAJ2B;CAA/B;AAMA,OAAO,cAAP,CAAsB,OAAtB,EAA+B,YAA/B,EAA6C,EAAE,OAAO,IAAP,EAA/C;AACA,QAAQ,OAAR,GAAkB,YAAlB","file":"resolver.js","sourcesContent":["\"use strict\";\nlet Resolver = require(\"enhanced-resolve/lib/Resolver\");\nlet SyncNodeJsInputFileSystem = require(\"enhanced-resolve/lib/SyncNodeJsInputFileSystem\");\nlet CachedInputFileSystem = require(\"enhanced-resolve/lib/CachedInputFileSystem\");\nlet UnsafeCachePlugin = require(\"enhanced-resolve/lib/UnsafeCachePlugin\");\nlet ModulesInDirectoriesPlugin = require(\"enhanced-resolve/lib/ModulesInDirectoriesPlugin\");\nlet ModulesInRootPlugin = require(\"enhanced-resolve/lib/ModulesInRootPlugin\");\nlet ModuleAsFilePlugin = require(\"enhanced-resolve/lib/ModuleAsFilePlugin\");\nlet ModuleAsDirectoryPlugin = require(\"enhanced-resolve/lib/ModuleAsDirectoryPlugin\");\nlet ModuleAliasPlugin = require(\"enhanced-resolve/lib/ModuleAliasPlugin\");\nlet DirectoryDefaultFilePlugin = require(\"enhanced-resolve/lib/DirectoryDefaultFilePlugin\");\nlet DirectoryDescriptionFilePlugin = require(\"enhanced-resolve/lib/DirectoryDescriptionFilePlugin\");\nlet DirectoryDescriptionFileFieldAliasPlugin = require(\"enhanced-resolve/lib/DirectoryDescriptionFileFieldAliasPlugin\");\nlet FileAppendPlugin = require(\"enhanced-resolve/lib/FileAppendPlugin\");\nlet ResultSymlinkPlugin = require(\"enhanced-resolve/lib/ResultSymlinkPlugin\");\nfunction makeRootPlugin(name, root) {\n    if (typeof root === \"string\") {\n        return new ModulesInRootPlugin(name, root);\n    }\n    else if (Array.isArray(root)) {\n        return function () {\n            root.forEach(function (root) {\n                this.apply(new ModulesInRootPlugin(name, root));\n            }, this);\n        };\n    }\n    return function () { };\n}\nfunction makeResolver(options) {\n    let fileSystem = new CachedInputFileSystem(new SyncNodeJsInputFileSystem(), 60000);\n    let resolver = new Resolver(fileSystem);\n    resolver.apply(new UnsafeCachePlugin(options.resolve.unsafeCache), options.resolve.packageAlias ? new DirectoryDescriptionFileFieldAliasPlugin(\"package.json\", options.resolve.packageAlias) : function () { }, new ModuleAliasPlugin(options.resolve.alias), makeRootPlugin(\"module\", options.resolve.root), new ModulesInDirectoriesPlugin(\"module\", options.resolve.modulesDirectories), makeRootPlugin(\"module\", options.resolve.fallback), new ModuleAsFilePlugin(\"module\"), new ModuleAsDirectoryPlugin(\"module\"), new DirectoryDescriptionFilePlugin(\"package.json\", options.resolve.packageMains), new DirectoryDefaultFilePlugin([\"index\"]), new FileAppendPlugin(options.resolve.extensions), new ResultSymlinkPlugin());\n    return resolver;\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = makeResolver;\n//# sourceMappingURL=resolver.js.map"]}