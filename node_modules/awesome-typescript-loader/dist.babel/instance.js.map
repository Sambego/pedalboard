{"version":3,"sources":["../dist/instance.js"],"names":[],"mappings":"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","file":"instance.js","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments)).next());\n    });\n};\nconst host_1 = require('./host');\nconst colors = require('colors');\nconst fs = require('fs');\nconst path = require('path');\nconst _ = require('lodash');\nconst tsconfig = require('tsconfig');\nconst helpers_1 = require('./helpers');\nconst deps_1 = require('./deps');\nconst checker_1 = require('./checker');\nconst tsconfig_utils_1 = require('./tsconfig-utils');\nconst resolver_1 = require('./resolver');\nlet pkg = require('../package.json');\nfunction getRootCompiler(compiler) {\n    if (compiler.parentCompilation) {\n        return getRootCompiler(compiler.parentCompilation.compiler);\n    }\n    else {\n        return compiler;\n    }\n}\nfunction getInstanceStore(compiler) {\n    let store = getRootCompiler(compiler)._tsInstances;\n    if (store) {\n        return store;\n    }\n    else {\n        throw new Error('Can not resolve instance store');\n    }\n}\nfunction ensureInstanceStore(compiler) {\n    let rootCompiler = getRootCompiler(compiler);\n    if (!rootCompiler._tsInstances) {\n        rootCompiler._tsInstances = {};\n    }\n}\nfunction resolveInstance(compiler, instanceName) {\n    return getInstanceStore(compiler)[instanceName];\n}\nconst COMPILER_ERROR = colors.red(`\\n\\nTypescript compiler cannot be found, please add it to your package.json file:\n    npm install --save-dev typescript\n`);\nconst BABEL_ERROR = colors.red(`\\n\\nBabel compiler cannot be found, please add it to your package.json file:\n    npm install --save-dev babel-core\n`);\nlet id = 0;\nfunction ensureInstance(webpack, options, instanceName) {\n    ensureInstanceStore(webpack._compiler);\n    let exInstance = resolveInstance(webpack._compiler, instanceName);\n    if (exInstance) {\n        return exInstance;\n    }\n    let tsFlow = Promise.resolve();\n    let compilerName = options.compiler || 'typescript';\n    let compilerPath = path.dirname(compilerName);\n    if (compilerPath == '.') {\n        compilerPath = compilerName;\n    }\n    let tsImpl;\n    try {\n        tsImpl = require(compilerPath);\n    }\n    catch (e) {\n        console.error(e);\n        console.error(COMPILER_ERROR);\n        process.exit(1);\n    }\n    let libPath = path.join(compilerPath, 'lib', 'lib.d.ts');\n    let lib6Path = path.join(compilerPath, 'lib', 'lib.es6.d.ts');\n    try {\n        require.resolve(libPath);\n    }\n    catch (e) {\n        libPath = path.join(compilerPath, 'bin', 'lib.d.ts');\n        lib6Path = path.join(compilerPath, 'bin', 'lib.es6.d.ts');\n    }\n    let compilerInfo = {\n        compilerName,\n        compilerPath,\n        tsImpl,\n        lib5: helpers_1.loadLib(libPath),\n        lib6: helpers_1.loadLib(lib6Path)\n    };\n    _.defaults(options, {\n        resolveGlobs: true\n    });\n    let configFilePath;\n    let configFile;\n    if (options.tsconfig && options.tsconfig.match(/\\.json$/)) {\n        configFilePath = options.tsconfig;\n    }\n    else {\n        configFilePath = tsconfig.resolveSync(options.tsconfig || process.cwd());\n    }\n    if (configFilePath) {\n        let content = fs.readFileSync(configFilePath).toString();\n        configFile = tsconfig_utils_1.parseContent(content, configFilePath);\n        if (options.resolveGlobs) {\n            tsconfig_utils_1.tsconfigSuggestions(configFile);\n            configFile = tsconfig.readFileSync(configFilePath, { filterDefinitions: true });\n        }\n    }\n    let tsFiles = [];\n    if (configFile) {\n        if (configFile.compilerOptions) {\n            _.extend(options, configFile.compilerOptions);\n            _.extend(options, configFile.awesomeTypescriptLoaderOptions);\n            options.exclude = configFile.exclude || [];\n            tsFiles = configFile.files;\n        }\n    }\n    options = tsconfig_utils_1.rawToTsCompilerOptions(options, path.dirname(configFilePath), tsImpl);\n    _.defaults(options, {\n        externals: [],\n        doTypeCheck: true,\n        sourceMap: true,\n        verbose: false,\n        noLib: false,\n        suppressOutputPathCheck: true,\n        sourceRoot: process.cwd()\n    });\n    options = _.omit(options, 'outDir', 'files', 'out');\n    options.externals.push.apply(options.externals, tsFiles);\n    let babelImpl;\n    if (options.useBabel) {\n        try {\n            babelImpl = require(path.join(process.cwd(), 'node_modules', 'babel-core'));\n        }\n        catch (e) {\n            console.error(BABEL_ERROR);\n            process.exit(1);\n        }\n    }\n    let cacheIdentifier = null;\n    if (options.useCache) {\n        if (!options.cacheDirectory) {\n            options.cacheDirectory = path.join(process.cwd(), '.awcache');\n        }\n        if (!fs.existsSync(options.cacheDirectory)) {\n            fs.mkdirSync(options.cacheDirectory);\n        }\n        cacheIdentifier = {\n            'typescript': tsImpl.version,\n            'awesome-typescript-loader': pkg.version,\n            'awesome-typescript-loader-query': webpack.query,\n            'babel-core': babelImpl\n                ? babelImpl.version\n                : null\n        };\n    }\n    let forkChecker = options.forkChecker && getRootCompiler(webpack._compiler)._tsFork;\n    let resolver = resolver_1.default(webpack._compiler.options);\n    let syncResolver = resolver.resolveSync.bind(resolver);\n    let tsState = new host_1.State(options, webpack._compiler.inputFileSystem, compilerInfo, syncResolver);\n    let compiler = webpack._compiler;\n    setupWatchRun(compiler, instanceName);\n    if (options.doTypeCheck) {\n        setupAfterCompile(compiler, instanceName, forkChecker);\n    }\n    let webpackOptions = _.pick(webpack._compiler.options, 'resolve');\n    let atlOptions = webpack.options.atl;\n    let plugins = [];\n    if (atlOptions && atlOptions.plugins) {\n        plugins = atlOptions.plugins;\n    }\n    let initedPlugins = [];\n    if (!forkChecker) {\n        initedPlugins = plugins.map(plugin => {\n            return require(plugin.file)(plugin.options);\n        });\n    }\n    return getInstanceStore(webpack._compiler)[instanceName] = {\n        id: ++id,\n        tsFlow,\n        tsState,\n        babelImpl,\n        compiledFiles: {},\n        options,\n        externalsInvoked: false,\n        checker: forkChecker\n            ? checker_1.createChecker(compilerInfo, options, webpackOptions, plugins)\n            : null,\n        cacheIdentifier,\n        plugins,\n        initedPlugins,\n        externalsInvocation: null\n    };\n}\nexports.ensureInstance = ensureInstance;\nfunction setupWatchRun(compiler, instanceName) {\n    compiler.plugin('watch-run', function (watching, callback) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let compiler = watching.compiler;\n            let instance = resolveInstance(watching.compiler, instanceName);\n            let state = instance.tsState;\n            let resolver = deps_1.createResolver(compiler.options.externals, state.options.exclude || [], watching.compiler.resolvers.normal.resolve);\n            let mtimes = watching.compiler.watchFileSystem.watcher.mtimes;\n            let changedFiles = Object.keys(mtimes);\n            changedFiles.forEach((changedFile) => {\n                state.fileAnalyzer.validFiles.markFileInvalid(changedFile);\n            });\n            try {\n                let tasks = changedFiles.map(function (changedFile) {\n                    return __awaiter(this, void 0, void 0, function* () {\n                        if (/\\.ts$|\\.d\\.ts$|\\.tsx$|\\.js$|\\.jsx$/.test(changedFile)) {\n                            yield state.readFileAndUpdate(changedFile);\n                            yield state.fileAnalyzer.checkDependencies(resolver, changedFile);\n                        }\n                    });\n                });\n                yield Promise.all(tasks);\n                state.updateProgram();\n                callback();\n            }\n            catch (err) {\n                console.error(err.toString());\n                callback();\n            }\n        });\n    });\n}\nlet runChecker = (instance, payload) => {\n    instance.checker.send({\n        messageType: 'compile',\n        payload\n    });\n};\nrunChecker = _.debounce(runChecker, 200);\nfunction setupAfterCompile(compiler, instanceName, forkChecker = false) {\n    compiler.plugin('after-compile', function (compilation, callback) {\n        let instance = resolveInstance(compilation.compiler, instanceName);\n        let state = instance.tsState;\n        if (forkChecker) {\n            let payload = {\n                files: state.allFiles(),\n                resolutionCache: state.host.moduleResolutionHost.resolutionCache\n            };\n            runChecker(instance, payload);\n        }\n        else {\n            if (!state.program) {\n                state.updateProgram();\n            }\n            let diagnostics = state.ts.getPreEmitDiagnostics(state.program);\n            let emitError = (err) => {\n                if (compilation.bail) {\n                    console.error('Error in bail mode:', err);\n                    process.exit(1);\n                }\n                compilation.errors.push(new Error(err));\n            };\n            let errors = helpers_1.formatErrors(instanceName, diagnostics);\n            errors.forEach(emitError);\n            instance.initedPlugins.forEach(plugin => {\n                plugin.processProgram(state.program);\n            });\n        }\n        let phantomImports = [];\n        state.allFileNames().forEach((fileName) => {\n            if (!instance.compiledFiles[fileName]) {\n                phantomImports.push(fileName);\n            }\n        });\n        instance.compiledFiles = {};\n        compilation.fileDependencies.push.apply(compilation.fileDependencies, phantomImports);\n        compilation.fileDependencies = _.uniq(compilation.fileDependencies);\n        callback();\n    });\n}\n//# sourceMappingURL=instance.js.map"]}